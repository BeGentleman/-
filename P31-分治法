0x00 分治法是什么？
     分治法是一种方法，即将原问题分解为几个规模较小但类似于原问题的子问题，对这些子问题进行递归求解，再合并这些子问题的解来建立原问题的解。

0X01 举一个利用分治法的例子：归并排序
     首先将待排序的n个元素（n为偶数，否则要再归排序并一次）序列分解为 两个每个具有n/2个元素的 子序列
     然后使用归并排序递归的排序这两个子序列
     最后将两个排好序的子序列合并
     
0x02 什么是归并排序？
     归并排序是一种排序速度仅次于快速排序的，稳定的排序方式。

0x03 归并排序原理说明：
     举例说明：
              给定一组无序的序列 1，56，589，8，532，89，96，2，4689，66
              用归并排序，即分治法来给这个序列排序
              首先第一次将这组序列的n个元素分解为 1，56，589，8，532
                                           89，96，2，4689，66 这两组
              然后继续第二次分解为 1，56，589，8
                             532
                             89，96，2，4689
                             66
              然后继续第三次分解为 1,56
                                  598,8
                                  532
                                  89,96
                                  2,4689
                                  66
              第四次也是最后一次分解为 1
                                      56
                                      598
                                      8
                                      532
                                      89
                                      96
                                      2
                                      4689
                                      66
              接下来开始归并，标是第四次分解得到的结果
              两两归并，单个的不变
              第一次归并，1和56，598和8，532，89和96，2和4689，66
              这时要开始进行比较大小，进行一次变换，变换后为 1和56，8和598，532，89和96，2和4689，66
              第二次归并，1和56这一组和8和598这一组进行归并，532不变；89和96这一组和2和4689这一组进行归并，66不变
              进行比较大小，步骤为：1与8进行比较，1比8小，所以把1放到变换后的最前面；
                                   这时变换后部分为 1，x，x，x；
                                   1和56这一组，还剩一个56；
                                   56与8进行比较，8比56小，所以把8放到变换后的1的后面；
                                   这时变换后部分为 1，8，x，x；
                                   1和56这一组，还剩56；
                                   56与598进行比较，56比598小，所以把56放到598前面；
                                   1和56这一组，全部比较完成；
                                   这时变换后为 1，8，56，598
                                   ------------------------------------------------------------------------------
                                   89与2进行比较，2比89小，所以把2放到变换后的最前面；
                                   这时变换后部分为2，x，x，x，x；
                                   89和96这一组，还剩89，96；
                                   89和4689进行比较，89比4689小，所以把89放到变换的2的后面；
                                   这是变换后部分为2，89，x，x；
                                   89和96这一组，还剩96；
                                   96与4689进行比较，96比4689小，所以把96放到4689前面；
                                   89和96这一组，全部比较完成；
                                   这时变换后为 2，89，96，4689
                                   
              第三次归并， 第二次归并得到的1，8，56，598这一组和532进行归并；第二次归并得到的2，89，96，4689这一组和66进行归并
              进行比较大小，步骤为： 1与532比，得到1，x，x，x，x
                                    8与532比，得到1，8，x，x，x
                                    56与532比，得到1，8，56，x，x
                                    598与532比，得到1，8，56，532，598
                                    ------------------------------------------------------------------------------
                                    2与66比，得到2，x，x，x，x
                                    89与66比，得到2，66，x，x，x
                                    这时直接把剩下的按照原来的顺序直接放到序列种就好，得到2，66，89，96，4689
                                    
              第四次归并， 第三次归并得到的1，8，56，532，598这一组和2，66，89，96，4689这一组进行归并
              进行比较大小，步骤为： 1与2比，1比2小，所以把1放到变换后的最前面；
                                    这时变换后部分为1，x，x，x，x，x，x，x，x，x；
                                    这时1，8，56，532，598这一组还剩8，56，532，598；
                                    8与2比，2比8小，所以把2放到变换后的1后面；
                                    这时变换后部分为1，2，x，x，x，x，x，x，x，x；
                                    这时1，8，56，532，598这一组还剩8，56，532，598；
                                    8与66比，8比66小，所以把8放到变换后的2后面；
                                    这时变换后部分为1，2，8，x，x，x，x，x，x，x；
                                    这时1，8，56，532，598这一组还剩56，532，598；
                                    56与66比，56比66小，所以把56放到变换后的8后面；
                                    这时变换后部分为1，2，8，56，x，x，x，x，x，x；
                                    这时1，8，56，532，598这一组还剩532，598；
                                    532与66比，66比532小，所以把66放到变换后的56后面；
                                    这时变换后部分为1，2，8，56，66，x，x，x，x，x；
                                    这时1，8，56，532，598这一组还剩532，598；
                                    532与89比，89比532小，所以把89放到变换后的66后面；
                                    这时变换后部分为1，2，8，56，66，89，x，x，x，x；
                                    这时1，8，56，532，598这一组还剩532，598；                                    
                                    532与96比，96比532小，所以把96放到变换后的89后面；
                                    这时变换后部分为1，2，8，56，66，89，96，x，x，x；
                                    这时1，8，56，532，598这一组还剩532，598；
                                    532与4689比，532比4689小，所以把532放到变换后的96后面；
                                    这时变换后部分为1，2，8，56，66，89，96，532，x，x；
                                    这时1，8，56，532，598这一组还剩598；
                                    598与4689比，598比4689小，所以把598放到变换后的532后面；
                                    这时变换后部分为1，2，8，56，66，89，96，532，598，x；
                                    这时1，8，56，532，598这一组全部变换完毕；
                                    直接把剩下的4689放到598后面即可；
                                    这时变换后部分为1，2，8，56，66，89，96，532，598，4689；
              归并结束
                                    
     总结：归并排序就是分解，归并的过程

0x03 归并排序python实现：
     见 BeGentleman/Suan-Fa-Dao-Lun-NOTE/代码/归并排序.py

0x04 归并排序时间复杂度，空间复杂度，稳定性
     时间复杂度和空间复杂度都为O(n),比较稳定
     # TODO：具体推导
                                    
               
              
                                           
     
     
